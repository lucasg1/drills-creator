name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  AWS_REGION: us-east-1 # Change to your AWS region
  EB_APPLICATION_NAME: drill-image-generator # Change to your EB application name
  EB_ENVIRONMENT_NAME: Drill-image-generator-env-1 # Change to your EB environment name
  S3_BUCKET: drills-creator-deployments # Change to your S3 bucket name
  DEPLOY_PACKAGE_NAME: drills-creator-${{ github.sha }}.zip

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create deployment package
        run: |
          # Create deployment package with all necessary files
          zip -r ${{ env.DEPLOY_PACKAGE_NAME }} \
            Dockerfile \
            Dockerrun.aws.json \
            requirements.txt \
            hand_image_server.py \
            poker_table_visualizer.py \
            clear_spot_solution_json.py \
            flow_logo.png \
            avatar.png \
            poker_viz/ \
            fonts/ \
            cards-images/ \
            poker_solutions/ \
            --exclude="*.git*" \
            --exclude="*.pytest_cache*" \
            --exclude="*__pycache__*" \
            --exclude="*.vscode*" \
            --exclude="hand_images/*" \
            --exclude="separated_solutions_by_hand/*" \
            --exclude="visualizations/*" \
            --exclude="desk-upload/*" \
            --exclude="*.md" \
            --exclude="start_server.bat"

          echo "Deployment package created: ${{ env.DEPLOY_PACKAGE_NAME }}"
          ls -la ${{ env.DEPLOY_PACKAGE_NAME }}

      - name: Upload deployment package to S3
        run: |
          aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.S3_BUCKET }}/
          echo "Package uploaded to S3: s3://${{ env.S3_BUCKET }}/${{ env.DEPLOY_PACKAGE_NAME }}"

      - name: Create new Elastic Beanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket="${{ env.S3_BUCKET }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
            --description "Deploy from GitHub Actions - Commit ${{ github.sha }}"

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
            --version-label ${{ github.sha }}

      - name: Wait for deployment to complete
        run: |
          echo "Waiting for deployment to complete..."
          aws elasticbeanstalk wait environment-updated \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --environment-name ${{ env.EB_ENVIRONMENT_NAME }}

          echo "Deployment completed!"

          # Get environment health and URL
          aws elasticbeanstalk describe-environments \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --environment-names ${{ env.EB_ENVIRONMENT_NAME }} \
            --query 'Environments[0].[EnvironmentName,Health,CNAME]' \
            --output table

      - name: Clean up deployment package
        if: always()
        run: |
          rm -f ${{ env.DEPLOY_PACKAGE_NAME }}
          echo "Deployment package cleaned up"
